%!PS-Adobe-1.0
%%Creator: 
%%CreationDate: Tue Sep  9 09:07:03 1986
%%Pages: (atend)
%%DocumentFonts: Helvetica Symbol
%%BoundingBox: 90 252 522 540
%%EndComments
/$Sdict 25 dict def $Sdict begin
%   variables

/basesize 100 def

/oldcex	1 def
/cex	1 def
/ratio	1 def
/pch	(*) def
/coffset basesize -0.345 mul def	% vertical offset for characters
/pcxshift 0 def

%   procedures

/checksize	% adjust font size if needed.  Stack: cex
  {
     /cex exch def
     oldcex cex ne	% scale sizes
       { 
	 /ratio cex oldcex div def
	 /TextFont TextFont ratio scalefont def
	 /PchFont PchFont ratio scalefont def
	 /coffset coffset ratio mul def
	 /oldcex cex def
       } if
  } def

/Pchar		%  the plot character.  Stack: string cex
  {
     checksize
     /pch exch def
     pch (.) eq		% replace period by bullet
       { (\267) pch copy pop } if
     pch (,) eq		% replace comma by middot
       { (\264) pch copy pop } if
     /PchFont TextFont def
     pch (*) eq pch (+) eq or  % switch to symbol font for these characters
       { /PchFont /Symbol findfont basesize oldcex mul scalefont def } if
     PchFont setfont
     pch stringwidth pop neg 2 div /pcxshift exch def
  } def

/M {moveto} def	% move to a point.  Stack: x y

/L {lineto} def % line to a point.  Stack: x y

/S {stroke} def

/P		% plot a character at a point.   Stack: x y
  {
     M			% move to the point
     pcxshift coffset rmoveto	% offset for the character
     pch show
  } def

/T		% show a text string. Stack: adj srot cex x y string
  { /str exch def
    M			% move to the point (pops x and y)
    checksize		% change size if necessary (pops cex)
    TextFont setfont
    dup rotate exch	% (moves adj to top)
    str stringwidth pop neg mul	% pops adj
    coffset rmoveto
    str show
    neg rotate
  } def

/Subs 	%add a subscript.  Stack: string srot
  {
     oldcex 0.75 mul checksize
     TextFont setfont
     dup rotate
     oldcex -0.5 mul basesize mul 0 exch rmoveto
     exch show
     oldcex 0.5 mul basesize mul 0 exch rmoveto
     neg rotate
     oldcex 4 3 div mul checksize TextFont setfont
  } def

/sup 	%add a superscript.  Stack: string srot
  {
     oldcex 0.75 mul checksize
     TextFont setfont
     dup rotate
     oldcex 0.5 mul basesize mul 0 exch rmoveto
     exch show
     oldcex -0.5 mul basesize mul 0 exch rmoveto
     neg rotate
     oldcex 4 3 div mul checksize TextFont setfont
  } def

/F		% change the base font. Stack: fontname
  {
    /TextFont exch findfont basesize oldcex mul scalefont def
    /PchFont TextFont def
  } def

/ST		% text in Symbol font. Stack: (as for T)
  {
    /Symbol F T /Helvetica F
  } def

1 setlinecap 1 setlinejoin
/Helvetica F
.1 .1 scale
%%EndProlog
%%Page: 1 1
%%Page: 1 1
gsave newpath
1917 2817 M 4503 2817 L 4503 5403 L 1917 5403 L closepath clip newpath
[] 0 setdash
5 setlinewidth
0 setgray
(.) 1 Pchar
2263 3898 P
2578 4147 P
2894 5227 P
3210 4855 P
3525 4805 P
4156 5327 P
grestore
gsave newpath
897 2517 M 5223 2517 L 5223 5403 L 897 5403 L closepath clip newpath
[] 0 setdash
5 setlinewidth
0 setgray
0.5 0 1 3210 2589 (Time \(days\)) T
0.5 90 1 1690 4109 (BOD \(mg/l\)) T
1947 2819 M 1947 2871 L S
2578 2819 M 2578 2871 L S
3210 2819 M 3210 2871 L S
3841 2819 M 3841 2871 L S
4472 2819 M 4472 2871 L S
1947 2819 M 4472 2819 L S
0.5 0 1 1947 2719 (0) T
0.5 0 1 2578 2719 (2) T
0.5 0 1 3210 2719 (4) T
0.5 0 1 3841 2719 (6) T
0.5 0 1 4472 2719 (8) T
1920 2868 M 1971 2868 L S
1920 3489 M 1971 3489 L S
1920 4110 M 1971 4110 L S
1920 4730 M 1971 4730 L S
1920 5351 M 1971 5351 L S
1920 2868 M 1920 5351 L S
0.5 90 1 1820 2868 (0) T
0.5 90 1 1820 3489 (5) T
0.5 90 1 1820 4110 (10) T
0.5 90 1 1820 4730 (15) T
0.5 90 1 1820 5351 (20) T
grestore
gsave newpath
1917 2817 M 4503 2817 L 4503 5403 L 1917 5403 L closepath clip newpath
[] 0 setdash
5 setlinewidth
0 setgray
1920 5400 M
1920 2819 L
4500 2819 L
4500 5400 L
1920 5400 L
S
grestore
showpage
%%Trailer
%%Pages: 0
end
