%!PS-Adobe-1.0
%%Creator: bates
%%CreationDate: Tue Jul 14 10:20:17 1987
%%Pages: (atend)
%%DocumentFonts: Helvetica Symbol
%%BoundingBox: 90.0 252.0 522.0 540.0
%%EndComments
/$Sdict 25 dict def $Sdict begin
%   variables

/basesize 90 def

/oldcex	1 def
/cex	1 def
/ratio	1 def
/pch	(*) def
/coffset basesize -0.345 mul def	% vertical offset for characters
/pcxshift 0 def

%   procedures

/checksize	% adjust font size if needed.  Stack: cex
  {
     /cex exch def
     oldcex cex ne	% scale sizes
       { 
	 /ratio cex oldcex div def
	 /TextFont TextFont ratio scalefont def
	 /PchFont PchFont ratio scalefont def
	 /coffset coffset ratio mul def
	 /oldcex cex def
       } if
  } def

/Pchar		%  the plot character.  Stack: string cex
  {
     checksize
     /pch exch def
     pch (.) eq		% replace period by bullet
       { (\267) pch copy pop } if
     pch (,) eq		% replace comma by middot
       { (\264) pch copy pop } if
     /PchFont TextFont def
     pch (*) eq pch (+) eq or  % switch to symbol font for these characters
       { /PchFont /Symbol findfont basesize oldcex mul scalefont def } if
     PchFont setfont
     pch stringwidth pop neg 2 div /pcxshift exch def
  } def

/M {moveto} def	% move to a point.  Stack: x y

/L {lineto} def % line to a point.  Stack: x y

/S {stroke} def

/P		% plot a character at a point.   Stack: x y
  {
     M			% move to the point
     pcxshift coffset rmoveto	% offset for the character
     pch show
  } def

/T		% show a text string. Stack: adj srot cex x y string
  { /str exch def
    M			% move to the point (pops x and y)
    checksize		% change size if necessary (pops cex)
    TextFont setfont
    dup rotate exch	% (moves adj to top)
    str stringwidth pop neg mul	% pops adj
    coffset rmoveto
    str show
    neg rotate
  } def

/Subs 	%add a subscript.  Stack: string srot
  {
     oldcex 0.75 mul checksize
     TextFont setfont
     dup rotate
     oldcex -0.5 mul basesize mul 0 exch rmoveto
     exch show
     oldcex 0.5 mul basesize mul 0 exch rmoveto
     neg rotate
     oldcex 4 3 div mul checksize TextFont setfont
  } def

/sup 	%add a superscript.  Stack: string srot
  {
     oldcex 0.75 mul checksize
     TextFont setfont
     dup rotate
     oldcex 0.5 mul basesize mul 0 exch rmoveto
     exch show
     oldcex -0.5 mul basesize mul 0 exch rmoveto
     neg rotate
     oldcex 4 3 div mul checksize TextFont setfont
  } def

/F		% change the base font. Stack: fontname
  {
    /TextFont exch findfont basesize oldcex mul scalefont def
    /PchFont TextFont def
  } def

/ST		% text in Symbol font. Stack: (as for T)
  {
    /Symbol F T /Helvetica F
  } def

1 setlinecap 1 setlinejoin
/Times-Bold F
0.1 0.1 scale
%%EndProlog
%%Page: 1 1
gsave newpath
1619 2519 M 4501 2519 L 4501 5401 L 1619 5401 L closepath clip newpath
[10 20] 0 setdash
5 setlinewidth
0 setgray
3728 3294 M
4124 3783 L
2458 3900 L
1928 3433 L
3728 3294 L
gsave 0.85 setgray fill grestore
S
[] 0 setdash
10 setlinewidth
2839 3578 M
3066 3805 L
S
2839 3578 M
2215 3459 L
S
2839 3578 M
3851 3955 L
S
[40 40] 0 setdash
5 setlinewidth
3851 3955 M
3848 3668 L
S
[] 0 setdash
10 setlinewidth
(.) 1.2 Pchar
2839 3578 P
(.) 1.2 Pchar
3066 3805 P
(.) 1.2 Pchar
2215 3459 P
(.) 1.2 Pchar
3851 3955 P
(.) 1.2 Pchar
2549 3523 P
grestore
gsave newpath
895 2515 M 5225 2515 L 5225 5405 L 895 5405 L closepath clip newpath
[] 0 setdash
10 setlinewidth
0 setgray
0 0 1 3066 3780 ( v) T (1) 0 Subs
0 0 1 2215 3415 ( v) T (2) 0 Subs
0 0 1 3851 3955 ( v) T (22) 0 Subs
0 0 1 2549 3503 ( v) T (12) 0 Subs
grestore
showpage
%%Trailer
%%Pages: 0
end
