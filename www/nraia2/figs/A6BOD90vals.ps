%!PS-Adobe-1.0
%%Creator: bates
%%CreationDate: Tue Dec  9 11:50:15 1986
%%Pages: (atend)
%%DocumentFonts: Helvetica Symbol
%%BoundingBox: 90.0 252.0 522.0 540.0
%%EndComments
/$Sdict 25 dict def $Sdict begin
%   variables

/basesize 100 def

/oldcex	1 def
/cex	1 def
/ratio	1 def
/pch	(*) def
/coffset basesize -0.345 mul def	% vertical offset for characters
/pcxshift 0 def

%   procedures

/checksize	% adjust font size if needed.  Stack: cex
  {
     /cex exch def
     oldcex cex ne	% scale sizes
       { 
	 /ratio cex oldcex div def
	 /TextFont TextFont ratio scalefont def
	 /PchFont PchFont ratio scalefont def
	 /coffset coffset ratio mul def
	 /oldcex cex def
       } if
  } def

/Pchar		%  the plot character.  Stack: string cex
  {
     checksize
     /pch exch def
     pch (.) eq		% replace period by bullet
       { (\267) pch copy pop } if
     pch (,) eq		% replace comma by middot
       { (\264) pch copy pop } if
     /PchFont TextFont def
     pch (*) eq pch (+) eq or  % switch to symbol font for these characters
       { /PchFont /Symbol findfont basesize oldcex mul scalefont def } if
     PchFont setfont
     pch stringwidth pop neg 2 div /pcxshift exch def
  } def

/M {moveto} def	% move to a point.  Stack: x y

/L {lineto} def % line to a point.  Stack: x y

/S {stroke} def

/P		% plot a character at a point.   Stack: x y
  {
     M			% move to the point
     pcxshift coffset rmoveto	% offset for the character
     pch show
  } def

/T		% show a text string. Stack: adj srot cex x y string
  { /str exch def
    M			% move to the point (pops x and y)
    checksize		% change size if necessary (pops cex)
    TextFont setfont
    dup rotate exch	% (moves adj to top)
    str stringwidth pop neg mul	% pops adj
    coffset rmoveto
    str show
    neg rotate
  } def

/Subs 	%add a subscript.  Stack: string srot
  {
     oldcex 0.75 mul checksize
     TextFont setfont
     dup rotate
     oldcex -0.5 mul basesize mul 0 exch rmoveto
     exch show
     oldcex 0.5 mul basesize mul 0 exch rmoveto
     neg rotate
     oldcex 4 3 div mul checksize TextFont setfont
  } def

/sup 	%add a superscript.  Stack: string srot
  {
     oldcex 0.75 mul checksize
     TextFont setfont
     dup rotate
     oldcex 0.5 mul basesize mul 0 exch rmoveto
     exch show
     oldcex -0.5 mul basesize mul 0 exch rmoveto
     neg rotate
     oldcex 4 3 div mul checksize TextFont setfont
  } def

/F		% change the base font. Stack: fontname
  {
    /TextFont exch findfont basesize oldcex mul scalefont def
    /PchFont TextFont def
  } def

/ST		% text in Symbol font. Stack: (as for T)
  {
    /Symbol F T /Helvetica F
  } def

1 setlinecap 1 setlinejoin
/Helvetica F
0.1 0.1 scale
%%EndProlog
%%Page: 1 1
%%Page: 1 1
gsave newpath
1917 2817 M 4503 2817 L 4503 5403 L 1917 5403 L closepath clip newpath
[] 0 setdash
5 setlinewidth
0 setgray
(.) 1 Pchar
2078 4160 P
2353 3292 P
4319 2978 P
4341 2980 P
2667 3673 P
2199 5241 P
grestore
gsave newpath
897 2517 M 5223 2517 L 5223 5403 L 897 5403 L closepath clip newpath
[] 0 setdash
5 setlinewidth
0 setgray
0.5 0 1 3210 2589 (q) ST (1) 0 Subs
0.5 90 1 1690 4109 (q) ST (2) 90 Subs
2172 2819 M 2172 2871 L S
2567 2819 M 2567 2871 L S
2962 2819 M 2962 2871 L S
3357 2819 M 3357 2871 L S
3752 2819 M 3752 2871 L S
4147 2819 M 4147 2871 L S
2172 2819 M 4147 2819 L S
0.5 0 1 2172 2719 (15) T
0.5 0 1 2567 2719 (20) T
0.5 0 1 2962 2719 (25) T
0.5 0 1 3357 2719 (30) T
0.5 0 1 3752 2719 (35) T
0.5 0 1 4147 2719 (40) T
1920 2843 M 1971 2843 L S
1920 3433 M 1971 3433 L S
1920 4022 M 1971 4022 L S
1920 4612 M 1971 4612 L S
1920 5201 M 1971 5201 L S
1920 2843 M 1920 5201 L S
0.5 90 1 1820 2843 (0.0) T
0.5 90 1 1820 3433 (0.5) T
0.5 90 1 1820 4022 (1.0) T
0.5 90 1 1820 4612 (1.5) T
0.5 90 1 1820 5201 (2.0) T
grestore
gsave newpath
1917 2817 M 4503 2817 L 4503 5403 L 1917 5403 L closepath clip newpath
[] 0 setdash
5 setlinewidth
0 setgray
1920 5399 M
1920 2819 L
4499 2819 L
4499 5399 L
1920 5399 L
S
grestore
showpage
%%Trailer
%%Pages: 0
end
